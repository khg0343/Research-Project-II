MODEL:
  META_ARCHITECTURE: "RetinaNet"
  WEIGHTS: "wetectron://ImageNetPretrained/MSRA/R-50.pkl"
  BACKBONE:
    NAME: "build_retinanet_resnet_fpn_backbone"
  RETINANET_ON : True
  WSOD_ON: True
  FASTER_RCNN: True
  RESNETS:
    DEPTH: 50
    OUT_FEATURES: ["res3", "res4", "res5"]
  ANCHOR_GENERATOR:
    SIZES: !!python/object/apply:eval ["[[x, x * 2**(1.0/3), x * 2**(2.0/3) ] for x in [32, 64, 128, 256, 512 ]]"]
  FPN:
    IN_FEATURES: ["res3", "res4", "res5"]
  RETINANET:
    IOU_THRESHOLDS: [0.4, 0.5]
    IOU_LABELS: [0, -1, 1]
    SMOOTH_L1_LOSS_BETA: 0.0
DATASETS:
  TRAIN: ("crosswalk/train",)
  TEST: ()
SOLVER:
  IMS_PER_BATCH: 16
  BASE_LR: 0.01  # Note that RetinaNet uses a different default learning rate
  STEPS: (210000, 250000)
  MAX_ITER: 270000
INPUT:
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
VERSION: 2